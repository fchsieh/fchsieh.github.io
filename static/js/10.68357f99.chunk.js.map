{"version":3,"sources":["../node_modules/@material-ui/core/esm/Grid/Grid.js","../node_modules/@material-ui/core/esm/Container/Container.js","images/nft.png","images/blog.png","images/compiler.png","images/bbs.png","images/portfolio.png","images/Linkedin.png","components/Projects.js"],"names":["SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","Grid","React","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","justify","_props$justifyContent","justifyContent","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","_extends","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","Container","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","capitalize","_defineProperty","marginLeft","marginRight","paddingLeft","paddingRight","Object","values","acc","value","maxWidthXs","max","maxWidthSm","maxWidthMd","maxWidthLg","maxWidthXl","useStyles","makeStyles","section","backgroundColor","backdropFilter","paddingTop","paddingBottom","textAlign","imageContainer","position","opacity","responsiveImg","height","imageOverlay","color","transition","overlayItems","top","overlayTitle","fontSize","fontFamily","down","overlayText","marginTop","sectionHeading","emphasize","portfolioData","url","jobAgg","title","link","nftMarket","nodeBlog","uCCompiler","nodeBBS","portfolioImage","Projects","Box","Typography","variant","style","map","i","src","alt","Button","href","target"],"mappings":"iGAAA,8CAkBIA,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1CC,EAAa,CAAC,QAAQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IA4CnE,SAASC,EAAUC,GACjB,IAAIC,EAAMC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAC1EG,EAAQC,WAAWN,GACvB,MAAO,GAAGO,OAAOF,EAAQJ,GAAKM,OAAOC,OAAOR,GAAKS,QAAQD,OAAOH,GAAQ,KAAO,KAChF,CA4BM,IA6HHK,EAAoBC,cAAiB,SAAcC,EAAOC,GAC5D,IAAIC,EAAsBF,EAAMG,aAC5BA,OAAuC,IAAxBD,EAAiC,UAAYA,EAC5DE,EAAoBJ,EAAMK,WAC1BA,OAAmC,IAAtBD,EAA+B,UAAYA,EACxDE,EAAUN,EAAMM,QAChBC,EAAgBP,EAAMQ,UACtBC,EAAmBT,EAAMU,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAmBZ,EAAMa,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAmBd,EAAMe,UACzBA,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAchB,EAAMiB,KACpBA,OAAuB,IAAhBD,GAAiCA,EACxCE,EAAUlB,EAAMkB,QAChBC,EAAwBnB,EAAMoB,eAC9BA,OAA2C,IAA1BD,EAAmC,aAAeA,EACnEE,EAAYrB,EAAMsB,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYvB,EAAMwB,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYzB,EAAM0B,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAiB3B,EAAM4B,QACvBA,OAA6B,IAAnBD,EAA4B,EAAIA,EAC1CE,EAAc7B,EAAM8B,KACpBA,OAAuB,IAAhBD,EAAyB,OAASA,EACzCE,EAAY/B,EAAMgC,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYjC,EAAMkC,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAsBnC,EAAMoC,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAQC,YAAyBtC,EAAO,CAAC,eAAgB,aAAc,UAAW,YAAa,YAAa,YAAa,YAAa,OAAQ,UAAW,iBAAkB,KAAM,KAAM,KAAM,UAAW,OAAQ,KAAM,KAAM,iBAE5NQ,EAAY+B,YAAKjC,EAAQkC,KAAMjC,EAAeM,GAAa,CAACP,EAAQO,UAAuB,IAAZe,GAAiBtB,EAAQ,cAAcX,OAAOC,OAAOgC,MAAaX,GAAQX,EAAQW,KAAMmB,GAAgB9B,EAAQ8B,aAA4B,QAAdrB,GAAuBT,EAAQ,gBAAgBX,OAAOC,OAAOmB,KAAuB,SAATe,GAAmBxB,EAAQ,WAAWX,OAAOC,OAAOkC,KAAwB,YAAfzB,GAA4BC,EAAQ,kBAAkBX,OAAOC,OAAOS,KAAgC,YAAjBF,GAA8BG,EAAQ,oBAAoBX,OAAOC,OAAOO,KAAiD,gBAA/Be,GAAWE,IAAoCd,EAAQ,sBAAsBX,OAAOC,OAAOsB,GAAWE,MAA0B,IAAPc,GAAgB5B,EAAQ,WAAWX,OAAOC,OAAOsC,MAAc,IAAPR,GAAgBpB,EAAQ,WAAWX,OAAOC,OAAO8B,MAAc,IAAPF,GAAgBlB,EAAQ,WAAWX,OAAOC,OAAO4B,MAAc,IAAPF,GAAgBhB,EAAQ,WAAWX,OAAOC,OAAO0B,MAAc,IAAPU,GAAgB1B,EAAQ,WAAWX,OAAOC,OAAOoC,MACh5B,OAAoBjC,gBAAoBY,EAAW8B,YAAS,CAC1DjC,UAAWA,EACXP,IAAKA,GACJoC,GACJ,IAqHGK,EAAaC,aA3RG,SAAgBC,GAClC,OAAOH,YAAS,CAEdD,KAAM,CAAC,EAGP3B,UAAW,CACTgC,UAAW,aACXC,QAAS,OACTC,SAAU,OACVC,MAAO,QAIT/B,KAAM,CACJ4B,UAAW,aACXI,OAAQ,KAKVb,aAAc,CACZc,SAAU,GAIZ,sBAAuB,CACrBC,cAAe,UAIjB,8BAA+B,CAC7BA,cAAe,kBAIjB,2BAA4B,CAC1BA,cAAe,eAIjB,iBAAkB,CAChBJ,SAAU,UAIZ,uBAAwB,CACtBA,SAAU,gBAIZ,wBAAyB,CACvB1C,WAAY,UAId,4BAA6B,CAC3BA,WAAY,cAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBF,aAAc,UAIhB,8BAA+B,CAC7BA,aAAc,cAIhB,4BAA6B,CAC3BA,aAAc,YAIhB,iCAAkC,CAChCA,aAAc,iBAIhB,gCAAiC,CAC/BA,aAAc,gBAIhB,4BAA6B,CAC3BiB,eAAgB,UAIlB,8BAA+B,CAC7BA,eAAgB,YAIlB,mCAAoC,CAClCA,eAAgB,iBAIlB,kCAAmC,CACjCA,eAAgB,gBAIlB,kCAAmC,CACjCA,eAAgB,iBA/ItB,SAAwBwB,EAAOQ,GAC7B,IAAIC,EAAS,CAAC,EAgBd,OAfApE,EAASqE,SAAQ,SAAU1B,GACzB,IAAI2B,EAAeX,EAAMhB,QAAQA,GAEZ,IAAjB2B,IAIJF,EAAO,WAAW1D,OAAOyD,EAAY,KAAKzD,OAAOiC,IAAY,CAC3DqB,OAAQ,IAAItD,OAAOR,EAAUoE,EAAc,IAC3CP,MAAO,eAAerD,OAAOR,EAAUoE,GAAe,KACtD,YAAa,CACXC,QAASrE,EAAUoE,EAAc,KAGtC,IACMF,CACR,CA+HII,CAAeb,EAAO,MAAOA,EAAMc,YAAYC,KAAKC,QAAO,SAAUC,EAAaC,GAGnF,OApMJ,SAAsBC,EAAcnB,EAAOQ,GACzC,IAAIC,EAAS,CAAC,EACdnE,EAAWoE,SAAQ,SAAUU,GAC3B,IAAIF,EAAM,QAAQnE,OAAOyD,EAAY,KAAKzD,OAAOqE,GAEjD,IAAa,IAATA,EAUJ,GAAa,SAATA,EAAJ,CAUA,IAAIhB,EAAQ,GAAGrD,OAAOsE,KAAKC,MAAMF,EAAO,GAAK,KAAQ,IAAM,KAG3DX,EAAOS,GAAO,CACZK,UAAWnB,EACXoB,SAAU,EACVC,SAAUrB,EATX,MANCK,EAAOS,GAAO,CACZK,UAAW,OACXC,SAAU,EACVC,SAAU,aAZZhB,EAAOS,GAAO,CACZK,UAAW,EACXC,SAAU,EACVC,SAAU,OAuBf,IAEkB,OAAfjB,EACFX,YAASsB,EAAcV,GAEvBU,EAAanB,EAAMc,YAAYY,GAAGlB,IAAeC,CAEpD,CA2JGkB,CAAaV,EAAajB,EAAOkB,GAC1BD,CACR,GAAE,CAAC,GACL,GA+JmC,CAClCW,KAAM,WADS7B,CAEd7C,GAmBY4C,K,mCC/Yf,8DAqEI+B,EAAyB1E,cAAiB,SAAmBC,EAAOC,GACtE,IAAIK,EAAUN,EAAMM,QAChBE,EAAYR,EAAMQ,UAClBC,EAAmBT,EAAMU,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDiE,EAAwB1E,EAAM2E,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAe5E,EAAM6E,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAkB9E,EAAMqE,SACxBA,OAA+B,IAApBS,EAA6B,KAAOA,EAC/CzC,EAAQC,YAAyBtC,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,QAAS,aAE7G,OAAoBD,gBAAoBY,EAAW8B,YAAS,CAC1DjC,UAAW+B,YAAKjC,EAAQkC,KAAMhC,EAAWqE,GAASvE,EAAQuE,MAAOF,GAAkBrE,EAAQqE,gBAA6B,IAAbN,GAAsB/D,EAAQ,WAAWX,OAAOoF,YAAWnF,OAAOyE,OAC7KpE,IAAKA,GACJoC,GACJ,IAqDcM,iBAnIK,SAAgBC,GAClC,MAAO,CAELJ,KAAMwC,YAAgB,CACpBhC,MAAO,OACPiC,WAAY,OACZpC,UAAW,aACXqC,YAAa,OACbC,YAAavC,EAAMhB,QAAQ,GAC3BwD,aAAcxC,EAAMhB,QAAQ,GAC5BkB,QAAS,SACRF,EAAMc,YAAYY,GAAG,MAAO,CAC7Ba,YAAavC,EAAMhB,QAAQ,GAC3BwD,aAAcxC,EAAMhB,QAAQ,KAI9B+C,eAAgB,CACdQ,YAAa,EACbC,aAAc,GAIhBP,MAAOQ,OAAO1B,KAAKf,EAAMc,YAAY4B,QAAQ1B,QAAO,SAAU2B,EAAKnC,GACjE,IAAIoC,EAAQ5C,EAAMc,YAAY4B,OAAOlC,GAQrC,OANc,IAAVoC,IACFD,EAAI3C,EAAMc,YAAYY,GAAGlB,IAAe,CACtCiB,SAAUmB,IAIPD,CACR,GAAE,CAAC,GAGJE,WAAYT,YAAgB,CAAC,EAAGpC,EAAMc,YAAYY,GAAG,MAAO,CAC1DD,SAAUJ,KAAKyB,IAAI9C,EAAMc,YAAY4B,OAAOpD,GAAI,OAIlDyD,WAAYX,YAAgB,CAAC,EAAGpC,EAAMc,YAAYY,GAAG,MAAO,CAC1DD,SAAUzB,EAAMc,YAAY4B,OAAO5D,KAIrCkE,WAAYZ,YAAgB,CAAC,EAAGpC,EAAMc,YAAYY,GAAG,MAAO,CAC1DD,SAAUzB,EAAMc,YAAY4B,OAAO9D,KAIrCqE,WAAYb,YAAgB,CAAC,EAAGpC,EAAMc,YAAYY,GAAG,MAAO,CAC1DD,SAAUzB,EAAMc,YAAY4B,OAAOhE,KAIrCwE,WAAYd,YAAgB,CAAC,EAAGpC,EAAMc,YAAYY,GAAG,MAAO,CAC1DD,SAAUzB,EAAMc,YAAY4B,OAAOtD,KAGxC,GAuEiC,CAChCwC,KAAM,gBADO7B,CAEZ8B,E,mHC7IY,MAA0B,gCCA1B,MAA0B,iCCA1B,MAA0B,qCCA1B,MAA0B,gCCA1B,MAA0B,sCCA1B,MAA0B,qC,OCWnCsB,EAAYC,aAAW,SAACpD,GAAD,MAAY,CACrCqD,QAAS,CACLC,gBAAiB,0BACjBC,eAAgB,aAChBC,WAAY,OACZC,cAAe,OACfpD,OAAQ,OACRE,cAAe,SACf9C,WAAY,SACZe,eAAgB,SAChBkF,UAAW,SACXxD,QAAS,QAEbyD,eAAgB,CACZC,SAAU,WACV1D,QAAS,OACT1B,eAAgB,SAChB,wBAAyB,CACrBqF,QAAS,IAGjBC,cAAe,CACX1D,MAAO,OACP2D,OAAQ,OACR7D,QAAS,QAEb8D,aAAc,CACVJ,SAAU,WACVxD,MAAO,OACP2D,OAAQ,OACRT,gBAAiB,UACjBW,MAAO,UACPJ,QAAS,EACTK,WAAY,QAEhBC,aAAc,CACVP,SAAU,WACVQ,IAAK,MACLxD,QAAS,QAEbyD,aAAa,aACTC,SAAU,OACVC,WAAY,QACXvE,EAAMc,YAAY0D,KAAK,MAAQ,CAC5BF,SAAU,WAGlBG,YAAY,aACRH,SAAU,OACVC,WAAY,OACZG,UAAW,QACV1E,EAAMc,YAAY0D,KAAK,MAAQ,CAC5BF,SAAU,WAGlBK,eAAgB,CACZV,MAAO,UACP5D,OAAQ,OACRqD,UAAW,SACXD,cAAe,SAEnBmB,UAAW,CAAEX,MAAO,WA7DK,IAgEvBY,EAAgB,CAClB,CACIC,IAAKC,EACLC,MAAO,iBACPC,KAAM,6BAEV,CACIH,IAAKI,EACLF,MAAO,kBACPC,KAAM,2CAEV,CACIH,IAAKK,EACLH,MAAO,eACPC,KAAM,0CAEV,CACIH,IAAKM,EACLJ,MAAO,cACPC,KAAM,0CAEV,CACIH,IAAKO,EACLL,MAAO,cACPC,KAAM,uCAEV,CACIH,IAAKQ,EACLN,MAAO,eACPC,KAAM,iCA8ECM,UA1EE,WACb,IAAM7H,EAAUyF,IAChB,OACI,mCACI,cAACqC,EAAA,EAAD,CAAK5H,UAAWF,EAAQ2F,QAAxB,SACI,eAACxB,EAAA,EAAD,WACI,cAAC3E,EAAA,EAAD,CAAMe,WAAS,EAAf,SACI,cAACf,EAAA,EAAD,CAAMmB,MAAI,EAACiB,GAAI,GAAf,SACI,cAACkG,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACIC,QAAQ,KACR9H,UAAWF,EAAQiH,eAFvB,mBAIW,IACP,sBAAM/G,UAAWF,EAAQkH,UAAzB,+BAOhB,cAAC/C,EAAA,EAAD,CAAWJ,SAAS,KAApB,SACI,cAACvE,EAAA,EAAD,CACIe,WAAS,EACTe,QAAS,EACT2G,MAAO,CACHnH,eAAgB,SAChBf,WAAY,UALpB,SAQKoH,EAAce,KAAI,SAACvH,EAAMwH,GAAP,OACf,cAAC3I,EAAA,EAAD,CAAMmB,MAAI,EAACiB,GAAI,GAAIZ,GAAI,EAAvB,SACI,eAAC8G,EAAA,EAAD,CAAK5H,UAAWF,EAAQiG,eAAxB,UACI,qBACImC,IAAKzH,EAAKyG,IACViB,IAAK1H,EAAK2G,MACVpH,UAAWF,EAAQoG,gBAEvB,cAAC0B,EAAA,EAAD,CAAK5H,UAAWF,EAAQsG,aAAxB,SACI,eAACwB,EAAA,EAAD,CACI5H,UAAWF,EAAQyG,aADvB,UAGI,cAACsB,EAAA,EAAD,CACI7H,UACIF,EAAQ2G,aAFhB,SAKKhG,EAAK2G,QAGV,cAACgB,EAAA,EAAD,CACIN,QAAQ,YACR9H,UACIF,EAAQ+G,YAEZwB,KAAM5H,EAAK4G,KACXnH,UAAU,IACVoI,OAAO,SAPX,4BAnBeL,EADhB,cA0C9C,C","file":"static/js/10.68357f99.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"center\"`. */\n    'justify-content-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"flex-end\"`. */\n    'justify-content-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-between\"`. */\n    'justify-content-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-around\"`. */\n    'justify-content-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justifyContent=\"space-evenly\"`. */\n    'justify-content-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      justify = props.justify,\n      _props$justifyContent = props.justifyContent,\n      justifyContent = _props$justifyContent === void 0 ? 'flex-start' : _props$justifyContent,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"justifyContent\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], (justify || justifyContent) !== 'flex-start' && classes[\"justify-content-xs-\".concat(String(justify || justifyContent))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   * @deprecated Use `justifyContent` instead, the prop was renamed\n   */\n  justify: deprecatedPropType(PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']), 'Use `justifyContent` instead, the prop was renamed.'),\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justifyContent: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justifyContent: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","export default __webpack_public_path__ + \"static/media/nft.3639c94d.png\";","export default __webpack_public_path__ + \"static/media/blog.db74f152.png\";","export default __webpack_public_path__ + \"static/media/compiler.78c0bc2a.png\";","export default __webpack_public_path__ + \"static/media/bbs.1be7abf6.png\";","export default __webpack_public_path__ + \"static/media/portfolio.deffa3a3.png\";","export default __webpack_public_path__ + \"static/media/Linkedin.8808d79c.png\";","import React from \"react\";\r\nimport { Box, Grid, Container, Button, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport nftMarket from \"../images/nft.png\";\r\nimport nodeBlog from \"../images/blog.png\";\r\nimport uCCompiler from \"../images/compiler.png\";\r\nimport nodeBBS from \"../images/bbs.png\";\r\nimport portfolioImage from \"../images/portfolio.png\";\r\nimport jobAgg from \"../images/Linkedin.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    section: {\r\n        backgroundColor: \"rgba(255, 255, 255, .2)\",\r\n        backdropFilter: \"blur(45px)\",\r\n        paddingTop: \"8rem\",\r\n        paddingBottom: \"8rem\",\r\n        margin: \"auto\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n    },\r\n    imageContainer: {\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        \"&:hover $imageOverlay\": {\r\n            opacity: 1,\r\n        },\r\n    },\r\n    responsiveImg: {\r\n        width: \"100%\",\r\n        height: \"auto\",\r\n        display: \"flex\",\r\n    },\r\n    imageOverlay: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        backgroundColor: \"#007cc7\",\r\n        color: \"#eefbfb\",\r\n        opacity: 0,\r\n        transition: \"0.3s\",\r\n    },\r\n    overlayItems: {\r\n        position: \"relative\",\r\n        top: \"25%\",\r\n        padding: \"1rem\",\r\n    },\r\n    overlayTitle: {\r\n        fontSize: \"2rem\",\r\n        fontFamily: \"Lato\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            fontSize: \"1.2rem\",\r\n        },\r\n    },\r\n    overlayText: {\r\n        fontSize: \"1rem\",\r\n        fontFamily: \"Lato\",\r\n        marginTop: \"1rem\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            fontSize: \"0.5rem\",\r\n        },\r\n    },\r\n    sectionHeading: {\r\n        color: \"#4da8da\",\r\n        margin: \"auto\",\r\n        textAlign: \"center\",\r\n        paddingBottom: \"120px\",\r\n    },\r\n    emphasize: { color: \"#eefbfb\" },\r\n}));\r\n\r\nconst portfolioData = [\r\n    {\r\n        url: jobAgg,\r\n        title: \"Job Aggregator\",\r\n        link: \"http://job-agg.shion.live\",\r\n    },\r\n    {\r\n        url: nftMarket,\r\n        title: \"NFT Marketplace\",\r\n        link: \"https://github.com/fchsieh/MyNFT-Market\",\r\n    },\r\n    {\r\n        url: nodeBlog,\r\n        title: \"Node.JS Blog\",\r\n        link: \"https://github.com/fchsieh/nodejs_blog\",\r\n    },\r\n    {\r\n        url: uCCompiler,\r\n        title: \"uC Compiler\",\r\n        link: \"https://github.com/fchsieh/uC-Compiler\",\r\n    },\r\n    {\r\n        url: nodeBBS,\r\n        title: \"Node.JS BBS\",\r\n        link: \"https://github.com/fchsieh/Node-BBS\",\r\n    },\r\n    {\r\n        url: portfolioImage,\r\n        title: \"My Portfolio\",\r\n        link: \"https://portfolio.fredhs.dev\",\r\n    },\r\n];\r\n\r\nconst Projects = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Box className={classes.section}>\r\n                <Container>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <Box>\r\n                                <Typography\r\n                                    variant=\"h3\"\r\n                                    className={classes.sectionHeading}\r\n                                >\r\n                                    Recent{\" \"}\r\n                                    <span className={classes.emphasize}>\r\n                                        Projects\r\n                                    </span>\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Container maxWidth=\"lg\">\r\n                        <Grid\r\n                            container\r\n                            spacing={2}\r\n                            style={{\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                            }}\r\n                        >\r\n                            {portfolioData.map((item, i) => (\r\n                                <Grid item xs={12} lg={4} key={i}>\r\n                                    <Box className={classes.imageContainer}>\r\n                                        <img\r\n                                            src={item.url}\r\n                                            alt={item.title}\r\n                                            className={classes.responsiveImg}\r\n                                        />\r\n                                        <Box className={classes.imageOverlay}>\r\n                                            <Box\r\n                                                className={classes.overlayItems}\r\n                                            >\r\n                                                <Typography\r\n                                                    className={\r\n                                                        classes.overlayTitle\r\n                                                    }\r\n                                                >\r\n                                                    {item.title}\r\n                                                </Typography>\r\n\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    className={\r\n                                                        classes.overlayText\r\n                                                    }\r\n                                                    href={item.link}\r\n                                                    component=\"a\"\r\n                                                    target=\"_blank\"\r\n                                                >\r\n                                                    Visit\r\n                                                </Button>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </Container>\r\n                </Container>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Projects;\r\n"],"sourceRoot":""}